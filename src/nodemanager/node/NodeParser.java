package nodemanager.node;

import java.io.*;
import static java.lang.System.out;
import java.util.Arrays;

/**
 * The NodeParser is a static class used to create Nodes from an InputStream.
 * 
 * @author Matt Crow (greengrappler12@gmail.com)
 */
public class NodeParser {
    
    /**
     * Generates Nodes from an InputStream coming from a file
     * @param s an InputStream of a Node csv file
     */
    public static void parseNodeFile(InputStream s){
        parseFile(s, (line) -> {
           new Node(
                   Integer.parseInt(line[0].trim()),
                   Integer.parseInt(line[1].trim()),
                   Integer.parseInt(line[2].trim())
           ); 
        });
    }
    
    /**
     * Reads Node connection data from an InputStream generated by a csv file.
     * @param s an InputStream of a csv file generated by the program.
     */
    public static void parseConnFile(InputStream s){
        parseFile(s, (line) -> {
           Node.get(Integer.parseInt(line[0].trim())).addAdjId(Integer.parseInt(line[1].trim()));
        });
    }
    
    
    /**
     * Reads the data of a label to node id csv file,
     * adding labels to nodes.
     * 
     * @param s an InputStream generated from a csv file with a string in the first column, and an integer in the second
     */
    public static void parseTitleFile(InputStream s){
        parseFile(s, (line) -> {
            Node.get(Integer.parseInt(line[1].trim())).addLabel(line[0].trim());
        });
    }
    
    /**
     * Reads each line from an InputStream, 
     * feeding each of them (split on comma),
     * one by one into the parser interface.
     * 
     * @param s an InputStream from a csv file
     * @param parser an instance of the parser interface, 
     * which takes an array of strings as a parameter.
     * You can do this shorthand using
     * <hr>
     * {@code
     *  parseFile(stream, (line) -> {
     *   do stuff with line
     *  });
     * }
     */
    public static void parseFile(InputStream s, FileParser parser){
        BufferedReader br;
        String[] line = new String[0];
        boolean firstLine = true;
        try{
            br = new BufferedReader(new InputStreamReader(s));
            while(br.ready()){
                try{
                    line = br.readLine().split(",");
                    parser.parse(line);
                } catch(Exception e){
                    if(!firstLine){
                        //don't print errors for first line, as it will always fail, being a header
                        out.println("Line fail: " + Arrays.toString(line));
                        e.printStackTrace();
                    }
                }
                firstLine = false;
            }
        } catch(IOException e){
            e.printStackTrace();
        }
    }
}

//replace with lambda later
interface FileParser{
    public void parse(String[] line);
}
